name: Auto Label and Assign PR

on:
  pull_request_target:
    types: [opened]

permissions:
  issues: write
  pull-requests: write

jobs:
  auto-label-assign:
    runs-on: ubuntu-latest
    steps:
      - name: Auto Label and Assign PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const prCreator = context.payload.pull_request.user.login;
            
            console.log(`üîç Processing PR #${prNumber} created by @${prCreator}`);
            
            // Step 1: Assign PR to creator
            try {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                assignees: [prCreator]
              });
              console.log(`‚úÖ Assigned PR #${prNumber} to @${prCreator}`);
            } catch (error) {
              console.log(`‚ö†Ô∏è  Failed to assign PR to creator: ${error.message}`);
            }
            
            // Step 2: Extract issue number from PR body
            const prBody = context.payload.pull_request.body || '';
            console.log(`üìù PR Body:\n${prBody}`);
            
            // Match patterns like "Closes #123", "Fixes #123", "Resolves #123", etc.
            const issuePattern = /(?:close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            const matches = [...prBody.matchAll(issuePattern)];
            
            if (matches.length === 0) {
              console.log('‚ÑπÔ∏è  No linked issue found in PR description');
              return;
            }
            
            // Get the first matched issue number
            const issueNumber = parseInt(matches[0][1]);
            console.log(`üîó Found linked issue #${issueNumber}`);
            
            // Step 3: Fetch labels from the linked issue
            try {
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
              
              const issueLabels = issue.labels.map(label => 
                typeof label === 'string' ? label : label.name
              ).filter(Boolean);
              
              console.log(`üè∑Ô∏è  Issue #${issueNumber} has labels: ${issueLabels.join(', ')}`);
              
              if (issueLabels.length === 0) {
                console.log('‚ÑπÔ∏è  No labels found on the linked issue');
                return;
              }
              
              // Step 4: Apply labels to PR
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: issueLabels
              });
              
              console.log(`‚úÖ Successfully applied labels to PR #${prNumber}: ${issueLabels.join(', ')}`);
              
              // Step 5: Add a comment explaining the automation
              const commentBody = [
                'ü§ñ **Automated PR Setup**',
                '',
                `‚úÖ This PR has been automatically assigned to @${prCreator}`,
                `‚úÖ Labels from issue #${issueNumber} have been applied: ${issueLabels.map(l => `\`${l}\``).join(', ')}`,
                '',
                '*This automation helps maintain consistency between issues and their PRs.*'
              ].join('\n');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              
              console.log('‚úÖ Added automation comment to PR');
              
            } catch (error) {
              console.log(`‚ùå Failed to process issue #${issueNumber}: ${error.message}`);
              
              // If issue doesn't exist or we can't access it, still keep the assignment
              console.log('‚ÑπÔ∏è  PR assignment was still completed successfully');
            }
